USE master

GO 

IF DB_ID('DBOjects') is not null
	drop database DBOjects

CREATE DATABASE DBOjects
GO

USE DBOjects

GO
IF OBJECT_ID('dbo.EMPLOYEES')is not null
	drop table dbo.EMPLOYEES

CREATE TABLE EMPLOYEES(
ID NVARCHAR (40) PRIMARY KEY,
BADGENUMBER INT NOT NULL UNIQUE,
SSN INT NOT NULL,
TITLE VARCHAR (20) NULL,
DATEHIRED DATETIME2 NOT NULL DEFAULT GETDATE()
)

GO
CREATE TRIGGER empTrig 

ON EMPLOYEES 
AFTER INSERT 
AS


UPDATE EMPLOYEES
	SET TITLE = Case

when BADGENUMBER >= 0 AND BADGENUMBER <= 300
	then 'CLERK'

when BADGENUMBER >= 301 AND BADGENUMBER <= 700
	then  'OFFICE EMPLOYEE'

when BADGENUMBER >= 701 AND BADGENUMBER <= 900
	then 'MANAGER'

when BADGENUMBER >= 901 AND BADGENUMBER <= 1000
	then 'DIRECTOR'
END

DECLARE @BADGENUMBER INT; SET @BADGENUMBER = (SELECT BADGENUMBER FROM EMPLOYEES)
DECLARE @TITLE VARCHAR(20)
DECLARE @ID NVARCHAR(40) SET @ID = (SELECT ID FROM EMPLOYEES)
DECLARE @SSN INT;
DECLARE @DATEHIRED DATETIME2 = DATEADD(DAY,0,GETDATE())



DECLARE @COUNTER INT = 1;
WHILE (@COUNTER <= 25)
BEGIN


SET @BADGENUMBER = CAST (RAND() * 1000 AS INT);
SET @ID = NEWID()
SET @SSN = CAST(RAND() * 99999999 AS INT);

INSERT EMPLOYEES(ID, BADGENUMBER, SSN, TITLE, DATEHIRED)
VALUES (@ID, @BADGENUMBER, @SSN, NULL, GETDATE())

SET @COUNTER  += 1
END

DECLARE @ID_FETCH NVARCHAR;
DECLARE @BADGENUM INT;
DECLARE @TITLE_ VARCHAR (20);



DECLARE empCursor CURSOR FAST_FORWARD FOR
	SELECT * FROM dbo.EMPLOYEES


OPEN empCursor;

FETCH NEXT FROM empCursor INTO @ID, @BADGENUMBER, @TITLE;


WHILE @@FETCH_STATUS = 0
BEGIN


PRINT @ID;
PRINT @BADGENUMBER;
PRINT @TITLE;


FETCH NEXT FROM empCursor INTO @ID, @BADGENUMBER, @TITLE;
END 

CLOSE empCursor
DEALLOCATE empCursor

GO
IF OBJECT_ID('dbo.vw_employees')is not null
DROP VIEW dbo.vw_employees
GO
CREATE VIEW vw_empView AS 
SELECT ID, BADGENUMBER, TITLE
FROM EMPLOYEES

GO 
SELECT * FROM vw_empView



